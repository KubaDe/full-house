on:
  workflow_call:

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        working-directory: ./

    steps:
      - name: ☁️ Checkout source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: ⚙️Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0

      - name: ⚙️ Set node version
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: 🚚 Install Node dependencies
        id: install
        run: pnpm install --frozen-lockfile

      - name: 🧪 Run tests
        if: (failure() || success()) && steps.install.outcome == 'success'
        id: tests
        run: pnpm run test

      - name: 🪦 Check for dead code
        if: (failure() || success()) && steps.install.outcome == 'success'
        id: deadcode
        run: pnpm run knip

      - name: 🎡 Check for circular dependencies
        if: (failure() || success()) && steps.install.outcome == 'success'
        id: madge
        run: pnpm run madge

      - name: 🕵️ Lint project
        if: (failure() || success()) && steps.install.outcome == 'success'
        id: lint
        run: pnpm run lint

      - name: 📰 Publish summary comment
        if: success() || failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              # PR code checks results:
              |    |  Step                           | Status                                                                                                           |
              | -- | --------------------------------| -----------------------------------------------------------------------------------------------------------------|
              | 🚚 |  Install packages               | ${{ (steps.install.outcome == 'success' && '✅') || (steps.install.outcome == 'failure' && '❌') || '⏭️' }}     |
              | 🕵️ |  Lint project                   | ${{ (steps.lint.outcome == 'success' && '✅') || (steps.lint.outcome == 'failure' && '❌') || '⏭️' }}           |
              | 🧪️ |  Run test                       | ${{ (steps.tests.outcome == 'success' && '✅') || (steps.tests.outcome == 'failure' && '❌') || '⏭️' }}         |
              | 🪦 |  Check for dead code            | ${{ (steps.deadcode.outcome == 'success' && '✅') || (steps.deadcode.outcome == 'failure' && '❌') || '⏭️' }}   |
              | 🎡 |  Check for circlar dependencies | ${{ (steps.madge.outcome == 'success' && '✅') || (steps.madge.outcome == 'failure' && '❌') || '⏭️' }}   |
              ------------
              [See details]( ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
              `
            })
